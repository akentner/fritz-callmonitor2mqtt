name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64

    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.21'
        cache: true

    - name: Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Get commit info
      id: commit
      run: |
        echo "COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_OUTPUT

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        GOARM: ${{ matrix.goarm }}
      run: |
        LDFLAGS="-X main.version=${{ steps.version.outputs.VERSION }} -X main.commit=${{ steps.commit.outputs.COMMIT }} -X main.date=${{ steps.commit.outputs.DATE }}"
        
        if [ "${{ matrix.goos }}" = "windows" ]; then
          BINARY_NAME="fritz-callmonitor2mqtt-${{ steps.version.outputs.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}.exe"
        else
          BINARY_NAME="fritz-callmonitor2mqtt-${{ steps.version.outputs.VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}"
        fi
        
        if [ -n "${{ matrix.goarm }}" ]; then
          BINARY_NAME="${BINARY_NAME}v${{ matrix.goarm }}"
        fi
        
        go build -ldflags "${LDFLAGS}" -o "${BINARY_NAME}" .
        
        # Create archive
        if [ "${{ matrix.goos }}" = "windows" ]; then
          zip "${BINARY_NAME%.exe}.zip" "${BINARY_NAME}"
          echo "ASSET=${BINARY_NAME%.exe}.zip" >> $GITHUB_ENV
        else
          tar -czf "${BINARY_NAME}.tar.gz" "${BINARY_NAME}"
          echo "ASSET=${BINARY_NAME}.tar.gz" >> $GITHUB_ENV
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: ${{ env.ASSET }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: binaries
        path: ./dist

    - name: Generate changelog
      id: changelog
      run: |
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "## What's Changed" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### Features" >> $GITHUB_OUTPUT
        echo "- UUID v7 call tracking across call lifecycle" >> $GITHUB_OUTPUT
        echo "- Enhanced MQTT status publishing" >> $GITHUB_OUTPUT
        echo "- Improved phone number normalization" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### Downloads" >> $GITHUB_OUTPUT
        echo "Choose the appropriate binary for your platform:" >> $GITHUB_OUTPUT
        echo "- **Linux AMD64**: \`fritz-callmonitor2mqtt-${{ steps.version.outputs.VERSION }}-linux-amd64.tar.gz\`" >> $GITHUB_OUTPUT
        echo "- **Linux ARM64**: \`fritz-callmonitor2mqtt-${{ steps.version.outputs.VERSION }}-linux-arm64.tar.gz\`" >> $GITHUB_OUTPUT
        echo "- **Linux ARMv7**: \`fritz-callmonitor2mqtt-${{ steps.version.outputs.VERSION }}-linux-armv7.tar.gz\`" >> $GITHUB_OUTPUT
        echo "- **Windows AMD64**: \`fritz-callmonitor2mqtt-${{ steps.version.outputs.VERSION }}-windows-amd64.zip\`" >> $GITHUB_OUTPUT
        echo "- **macOS Intel**: \`fritz-callmonitor2mqtt-${{ steps.version.outputs.VERSION }}-darwin-amd64.tar.gz\`" >> $GITHUB_OUTPUT
        echo "- **macOS Apple Silicon**: \`fritz-callmonitor2mqtt-${{ steps.version.outputs.VERSION }}-darwin-arm64.tar.gz\`" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: Release ${{ steps.version.outputs.VERSION }}
        body: ${{ steps.changelog.outputs.CHANGELOG }}
        draft: false
        prerelease: ${{ contains(steps.version.outputs.VERSION, 'alpha') || contains(steps.version.outputs.VERSION, 'beta') || contains(steps.version.outputs.VERSION, 'rc') }}
        files: ./dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
